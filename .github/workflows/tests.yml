name: Rust
defaults:
  run:
    shell: bash

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: khonsulabs/build-rust:latest
      options: "--security-opt seccomp=unconfined"

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@postgres:$POSTGRES_PORT/postgres" >> .env

          cd migrations
          cargo run --release

          cd ..
          cargo build --release

      - name: Run tests
        run: |
          cargo test --release --verbose

      - name: Deploy to base.khonsulabs.com
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$SSH_KEY" > base_ssh_id
          echo "$HOST_KEY" > known_hosts
          chmod 0600 base_ssh_id
          chown 0600 known_hosts

          mkdir -p deploy
          cp -r static/ deploy/
          cp -r templates/ deploy/
          cp target/release/server deploy/khonsubase
          ssh -o UserKnownHostsFile=./known_hosts -i ./base_ssh_id base@base-box.khonsulabs.com 'sudo /usr/bin/systemctl stop khonsubase'
          scp -o UserKnownHostsFile=./known_hosts -i ./base_ssh_id -r deploy base@base-box.khonsulabs.com:
          ssh -o UserKnownHostsFile=./known_hosts -i ./base_ssh_id base@base-box.khonsulabs.com 'sudo /usr/bin/systemctl start khonsubase'
          rm base_ssh_id
        env:
          SSH_KEY: ${{ secrets.BASE_KHONSULABS_COM_DEPLOY_KEY }}
          HOST_KEY: ${{ secrets.BASE_KHONSULABS_COM_SSH_FINGERPRINT }}

      - name: Run code coverage
        run: |
          cargo +nightly test --all-features
          zip -0 ccov.zip `find . \( -name "server*.gc*" \) -print`;
          zip -0 ccov.zip `find . \( -name "database*.gc*" \) -print`;
          rm -rf target
          grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" --ignore "/target" -o lcov.info;
          bash <(curl -s https://codecov.io/bash) -f lcov.info;
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests" # TODO: https://github.com/alexcrichton/proc-macro2/issues/218
          RUSTDOCFLAGS: "-Cpanic=abort"
