name: Rust

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: khonsulabs/build-rust:latest
      options: "--security-opt seccomp=unconfined"

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build
        env:
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@postgres:$POSTGRES_PORT/postgres" >> .env

          cd migrations
          cargo run --release

          cd ..
          cargo build --release

      - name: Run tests
        run: |
          cargo test --release --verbose

      - name: Deploy to base.khonsulabs.com
        if: github.ref == 'refs/heads/base.khonsulabs.com'
        run: |
          echo $SSH_KEY > base_ssh_id
          mkdir ~/.ssh
          chown 0600 ~/.ssh
          echo $HOST_KEY >> ~/.ssh/known_hosts
          chown 0600 ~/.ssh/known_hosts

          mkdir -p deploy
          cp -r static/ deploy/
          cp -r templates/ deploy/
          cp target/release/server deploy/khonsubase
          chmod 0600 base_ssh_id
          scp -ri ./base_ssh_id deploy base@base-box.khonsulabs.com:
          rm base_ssh_id
        env:
          SSH_KEY: ${{ secrets.BASE_KHONSULABS_COM_DEPLOY_KEY }}
          HOST_KEY: ${{ secrets.BASE_KHONSULABS_COM_SSH_FINGERPRINT }}
